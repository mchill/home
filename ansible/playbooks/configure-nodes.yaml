- name: Configure all nodes
  hosts: all
  tasks:
    - name: Install and upgrade packages
      become: true
      block:
        - name: Upgrade packages
          ansible.builtin.apt:
            update_cache: true
            upgrade: true

        - name: Install kubernetes apt source
          block:
            - name: Install kubernetes apt key
              ansible.builtin.get_url:
                url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
                dest: /etc/apt/trusted.gpg.d/kubernetes-archive-keyring.gpg

            - name: Install kubernetes apt repository
              ansible.builtin.apt_repository:
                repo: "deb [signed-by=/etc/apt/trusted.gpg.d/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
                update_cache: true

        - name: Install helm apt source
          block:
            - name: Install helm apt key
              ansible.builtin.get_url:
                url: https://baltocdn.com/helm/signing.asc
                dest: /etc/apt/trusted.gpg.d/helm.asc

            - name: Install helm apt repository
              ansible.builtin.apt_repository:
                repo: "deb [signed-by=/etc/apt/trusted.gpg.d/helm.asc] https://baltocdn.com/helm/stable/debian/ all main"
                update_cache: true

        - name: Install github apt source
          block:
            - name: Install github apt key
              ansible.builtin.get_url:
                url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
                dest: /etc/apt/trusted.gpg.d/githubcli-archive-keyring.gpg

            - name: Install github apt repository
              ansible.builtin.apt_repository:
                repo: "deb [signed-by=/etc/apt/trusted.gpg.d/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
                update_cache: true

        - name: Install packages
          ansible.builtin.apt:
            pkg:
              - apt-transport-https
              - ca-certificates
              - curl
              - gh
              - git
              - helm
              - kubectl
              - nfs-common
              - openssh-server
              - open-iscsi
              - vim
              - zsh

    - name: Configure auth
      become: true
      ansible.builtin.copy:
        dest: /etc/ssh/sshd_config.d/disable_root_login.conf
        content: |
          ChallengeResponseAuthentication no
          PasswordAuthentication no
          UsePAM no
          PermitRootLogin no

    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"

    - name: Copy hosts file
      become: true
      ansible.builtin.template:
        src: ../templates/hosts.j2
        dest: /etc/hosts
        mode: "0644"

    - name: Increase max file handlers
      become: true
      block:
        - name: Set max_user_instances
          ansible.posix.sysctl:
            name: fs.inotify.max_user_instances
            value: '1024'
            reload: true

        - name: Set max_user_watches
          ansible.posix.sysctl:
            name: fs.inotify.max_user_watches
            value: '262144'
            reload: true

    - name: Set zsh as default shell
      block:
        - name: Copy .zshrc file
          ansible.builtin.template:
            src: ../templates/zshrc.j2
            dest: ~/.zshrc
            mode: "0644"
            force: no

        - name: Check for existing oh-my-zsh installation
          register: oh_my_zsh
          ansible.builtin.stat:
            path: ~/.oh-my-zsh

        - name: Install oh-my-zsh
          when: not oh_my_zsh.stat.exists
          ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

    - name: Mount filesystems
      become: true
      block:
        - name: Mount longhorn
          ansible.posix.mount:
            path: /mnt/longhorn
            src: "{{ longhorn_partition }}"
            fstype: ext4
            opts: defaults
            state: mounted

        - name: Mount media
          ansible.posix.mount:
            src: 192.168.1.210:/volume1/Media
            path: /mnt/media
            fstype: nfs
            opts: user,nofail,noatime,nolock,intr,tcp,actimeo=1800
            boot: false
            state: mounted

        - name: Mount backup
          ansible.posix.mount:
            src: 192.168.1.210:/volume1/ServerBackup
            path: /mnt/backup
            fstype: nfs
            opts: user,nofail,noatime,nolock,intr,tcp,actimeo=1800
            boot: false
            state: mounted

- name: Configure laptop
  hosts: laptops
  tasks:
    - name: Configure lid switch behavior
      become: true
      ansible.builtin.copy:
        dest: /etc/systemd/logind.conf.d/disable_suspend.conf
        content: |
          [Login]
          HandleLidSwitch=lock
          HandleLidSwitchExternalPower=lock
          HandleLidSwitchDocked=ignore

- name: Configure raspberry pis
  hosts: rpis
  tasks:
    - name: Install packages
      ansible.builtin.apt:
        pkg:
          - linux-modules-extra-raspi

    - name: Enable cgroups
      become: true
      ansible.builtin.lineinfile:
        path: /boot/firmware/cmdline.txt
        backrefs: yes
        regexp: ^(.+?)(\scgroup_\w+=\w+)*$
        line: '\1 cgroup_enable=memory cgroup_memory=1'

    - name: Overclock
      become: true
      ansible.builtin.blockinfile:
        path: /boot/firmware/config.txt
        block: |
          [all]
          # Overclock
          arm_freq=2000
          over_voltage=6

- name: Reboot
  hosts: all
  serial: 1
  tasks:
    - name: Reboot for changes to take effect
      ansible.builtin.reboot:
